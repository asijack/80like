apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        multiDexEnabled true
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi', 'x86'
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        viewBinding true
        dataBinding true
    }

    /*客户类型：可选，默认基线，0：基线；1：中性；2：区域默认（占位）；3：区域印度*/
    flavorDimensions "zone", "channel"
    productFlavors {
        base {
            dimension "zone"
            buildConfigField "int", "CLIENT_SOURCE", "0"
        }

        neutral {
            dimension "zone"
            buildConfigField "int", "CLIENT_SOURCE", "1"
        }

        india {
            dimension "zone"
            buildConfigField "int", "CLIENT_SOURCE", "2"
        }

        huawei {
            dimension "channel"
            buildConfigField "boolean", "SUPPORT_APP_UPDATE", "false"
            buildConfigField "int", "APP_CHANNEL_INDEX", "1"
        }
        vivo {
            dimension "channel"
            buildConfigField "boolean", "SUPPORT_APP_UPDATE", "false"
            buildConfigField "int", "APP_CHANNEL_INDEX", "2"
        }
        xiaomi {
            dimension "channel"
            buildConfigField "boolean", "SUPPORT_APP_UPDATE", "false"
            buildConfigField "int", "APP_CHANNEL_INDEX", "3"
        }
        oppo {
            dimension "channel"
            buildConfigField "boolean", "SUPPORT_APP_UPDATE", "false"
            buildConfigField "int", "APP_CHANNEL_INDEX", "4"
        }
        samsung {
            dimension "channel"
            buildConfigField "boolean", "SUPPORT_APP_UPDATE", "false"
            buildConfigField "int", "APP_CHANNEL_INDEX", "5"
        }
        google {
            dimension "channel"
            buildConfigField "boolean", "SUPPORT_APP_UPDATE", "false"
            buildConfigField "int", "APP_CHANNEL_INDEX", "6"
        }
        other {
            dimension "channel"
            buildConfigField "boolean", "SUPPORT_APP_UPDATE", "false"
            buildConfigField "int", "APP_CHANNEL_INDEX", "-1"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.4.0-alpha05'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0-alpha05'
    implementation 'androidx.multidex:multidex:2.0.1'
}

repositories {
    mavenCentral()
}

//监听gradle配置阶段执行完成，可以获取到project下的所有task
//执行module的 clean :解决Failed to delete \build\.......\classes.jar
//this.project.afterEvaluate { project ->
//    def buildTask1 = project.tasks.getByName('assembleDebug')
//    def buildTask2 = project.tasks.getByName('assembleRelease')
//    def taskClean = project.tasks.findByPath("clean")
//    if (buildTask1 != null) {
//        buildTask1.doFirst {
//            taskClean.onlyIf {
//                true
//            }
//        }
//    }
//    if (buildTask2 != null) {
//        buildTask2.doFirst {
//            taskClean.onlyIf {
//                true
//            }
//        }
//    }
//}